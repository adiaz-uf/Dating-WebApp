services:
  postgresql:
    container_name: postgresql
    build:
        context: ./Docker/PostgreSQL
        dockerfile: Dockerfile
    volumes:
        - postgresql_volume:/var/lib/postgresql
    networks:
        - matcha-network
    environment:
        POSTGRES_ROOT_PASSWORD: ${POSTGRES_ROOT_PASSWORD}
        POSTGRES_USER: ${POSTGRES_USER}
        POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
        POSTGRES_DB: ${POSTGRES_DB}
        TZ: ${TIMEZONE}
    healthcheck:
        test:
            [
                "CMD-SHELL",
                "pg_isready -U $${POSTGRES_USER} -d $${POSTGRES_DB}",
            ]
        interval: 10s
        timeout: 5s
        retries: 5
    restart: on-failure
    ports:
        - "5432:5432"
    expose:
        - "5432"

  backend:
    container_name: backend
    build:
        context: .
        dockerfile: Docker/Backend/Dockerfile
    volumes:
        - ./Backend:/backend
        - ./uploads:/uploads
    networks:
        - matcha-network
    environment:
        TZ: ${TIMEZONE}
        FLASK_ENV: development
    depends_on:
        postgresql:
            condition: service_healthy
    env_file: .env
    ports:
        - "3001:3001"
    restart: on-failure

  frontend:
    container_name: frontend
    build:
        context: ./Docker/Frontend
        dockerfile: Dockerfile
    volumes:
        - ./Frontend:/Frontend
    networks:
        - matcha-network
    environment:
        TZ: ${TIMEZONE}
    env_file: .env
    ports:
        - "5173:5173"
    expose:
        - "5173"
    restart: on-failure

volumes:
    postgresql_volume:
      driver: local
      driver_opts:
          type: "none"
          o: "bind"
          device: "${POSTGRESQL_VOLUME_PATH}"
    pgadmin_data:
      driver: local
networks:
  matcha-network:
      driver: bridge
